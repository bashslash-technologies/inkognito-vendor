DESCRIPTION OF CODE FOR ASSIGNMENT 2

The variables m and n on line 122 and 123 declares the number of rows and columns of a matrix
A respectively which is key to the computations.

Illustrated below is an explanation of the code with an example where:
	m = 4,
	n = 3
	
	
LINE 1-5
	libraries being used in the program are being imported here.
	math.h for functions like sqrt used on line 149.
	mpi.h which contains all the mpi commands being used in the program.
	iostream which helps interact with the terminal throught commands like cout.
	time.h for generating timestamps as shown on line 356.
	
	
LINE 7-8
	This lines indicates the presence of the main and timestamp functions. This allows other functions
	to acknowledge their presence even befor they are defined to prevent Undefined Errors.


LINE 12-320
	This is the main function. The main function is where all programmes begin and end in a C++ code.
	The parameters int argc and char *argv[] allows the program to make use of arguments passed to
	the program when starting in the terminal.
	
	LINE 62-84
		This contains a list of variables being declared which would be used later on in the program.
	
	LINE 88
		MPI is being Initialized here and stored in a variable called ierr.
		
	LINE 90-96
		This checks if there was an error during the initialization of MPI and displays an error message
		and finally exits with the exit code 1. (an exit code thats not 0 in C++ indicates an error)
		
	LINE 100
		This retrives the processor's ID and stores in variable my_id.
		
	LINE 104
		This retrives the number of processors and stores in variable num_procs.
		
	LINE 106-120
		This displays a message indicating a description of the program, the processor's ID , the number
		of processes and the current timestamp generated by the timestamp function on line 108.
		
	LINE 122-131
		The size of the matrix is declared with m being the number of rows and n being the number of columns.
		This info is then displayed.
	
	LINE 138-175
		This checks if the process is the master process and then:
			The master process allocates memory for the matrix A in here as well as vector x and the resulting vector b.
			The master process then initializes A and x and then goes further to print x.
		
	LINE 180-184
		This executes otherwise if the process is not the master process.
			The slave processes allocate space for a row of A and the vector x.
	
	LINE 188
		The master process broadcasts the vector X to all other processes.
	
	LINE 190-254
		The master process sends a row of A to all the other processes.
		
	LINE 260-287
		Each slave process repeatedly receives rows of A (with TAG indicating which row it is),
		computes dot products A(I,1:N) * X(1:N) and returns the result (and TAG), until receiving the "DONE" message.
		(was part of comments)
		
	LINE 291-304
		The master process displays the resulting vector b and then free the memory space allocated to it.
		
	LINE 308
		This terminates MPI.
		
	LINE 312-319
		The master process displays the time at which the process is being terminated and terminates the program.
		return 0 on LINE 319 indicates the program ended successfully.
	

LINE 351-357
	This containt the defination on the timestamp function that prints out the current datetime.
		
		
